<?xml version="1.0" encoding="UTF-8"?>
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CouponUrlBuilderTest">
        <annotations>
            <features value="Dotdigital module"/>
            <stories value="Dotdigital Coupon URL Builder"/>
            <title value="Generate coupon URLs using the tool"/>
            <description value="The coupon URL builder is displayed if the API is enabled, and functions as expected."/>
            <severity value="MINOR"/>
            <group value="dotmailer"/>
            <testCaseId value="BUNDLE-2431"/>
        </annotations>

        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="AdminLoginActionGroup1"/>

            <!-- Fill in API credentials and enable -->
            <actionGroup ref="SetDotmailerAccountData" stepKey="SetDotmailerAccountData"/>

            <!-- Create a cart price rule -->
            <actionGroup ref="DotAdminCreateCartPriceRuleActionGroup" stepKey="createCartPriceRule">
                <argument name="ruleName" value="DotSalesRule"/>
            </actionGroup>

            <!-- Set the dynamic content passcode -->
            <actionGroup ref="CreateDynamicContentPasscode" stepKey="createDynamicContentPasscode"/>
        </before>

        <after>
            <!-- Clear the dynamic content passcode -->
            <actionGroup ref="ClearDynamicContentPasscode" stepKey="clearDynamicContentPasscode" />

            <!-- Delete the sales rule we created for the test -->
            <actionGroup ref="DeleteCartPriceRuleByName" stepKey="DeleteCartPriceRuleByName">
                <argument name="ruleName" value="{{DotSalesRule.name}}"/>
            </actionGroup>

            <actionGroup ref="ResetDotmailerAccountData" stepKey="resetAccountData"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Test configuration of URL builder -->
        <amOnPage url="{{AdminCartPriceRulesPage.url}}" stepKey="amOnCartPriceList"/>
        <click selector="{{AdminCartPriceRulesSection.rowContainingText(DotSalesRule.name)}}" stepKey="goToEditRule"/>
        <seeElement selector="{{EngagementCloudCouponUrlBuilderSection.couponUrlBuilderHeader}}" stepKey="seeCouponUrlBuilder"/>
        <conditionalClick selector="{{EngagementCloudCouponUrlBuilderSection.couponUrlBuilderHeader}}" dependentSelector="{{EngagementCloudCouponUrlBuilderSection.couponUrlBuilderFieldset}}" visible="false" stepKey="clickToExpandCouponUrlBuilder"/>

        <!-- Verify default value -->
        <grabValueFrom selector="{{EngagementCloudCouponUrlBuilderSection.urlBuilderOutput}}" stepKey="grabDefaultUrlValue"/>
        <assertStringContainsString message="The default URL value does not match the expected value." stepKey="assertContains1">
			<actualResult type="const">$grabDefaultUrlValue</actualResult>
			<expectedResult type="string">{{DotCouponUrl.defaultUrlValue}}</expectedResult>
        </assertStringContainsString>

        <!-- Set some options for format, prefix and suffix and re-verify -->
        <selectOption selector="{{EngagementCloudCouponUrlBuilderSection.codeFormat}}" userInput="{{DotCouponUrl.codeFormatNum}}" stepKey="setCodeFormat"/>

        <fillField selector="{{EngagementCloudCouponUrlBuilderSection.codePrefix}}" userInput="{{DotCouponUrl.codePrefix}}" stepKey="setCodePrefix"/>

        <fillField selector="{{EngagementCloudCouponUrlBuilderSection.codeSuffix}}" userInput="{{DotCouponUrl.codeSuffix}}" stepKey="setCodeSuffix"/>

        <grabValueFrom selector="{{EngagementCloudCouponUrlBuilderSection.urlBuilderOutput}}" stepKey="grabUrlValueWithFormatPrefixSuffixUpdated"/>
        <assertStringContainsString message="The URL value does not match the expected value after code format, code prefix and code suffix are modified." stepKey="assertContains2">
			<actualResult type="const">$grabUrlValueWithFormatPrefixSuffixUpdated</actualResult>
			<expectedResult type="string">{{DotCouponUrl.urlValueWithNumericFormatPrefixAndSuffix}}</expectedResult>
        </assertStringContainsString>

        <!-- Set option for Expires After and re-verify -->
        <fillField selector="{{EngagementCloudCouponUrlBuilderSection.expiresAfter}}" userInput="{{DotCouponUrl.expiresAfter}}" stepKey="setExpiresAfter"/>

        <grabValueFrom selector="{{EngagementCloudCouponUrlBuilderSection.urlBuilderOutput}}" stepKey="grabUrlValueWithExpiresAfterUpdated"/>
        <assertStringContainsString message="The URL value does not match the expected value after expires after is modified." stepKey="assertContains3">
			<actualResult type="const">$grabUrlValueWithExpiresAfterUpdated</actualResult>
			<expectedResult type="string">{{DotCouponUrl.urlValueWithExpireDays}}</expectedResult>
        </assertStringContainsString>

        <!-- Set options for Allow Resend and Cancel Send If Used/Expired and re-verify -->
        <selectOption selector="{{EngagementCloudCouponUrlBuilderSection.allowResend}}" userInput="{{DotCouponUrl.allowResend}}" stepKey="setAllowResend"/>
        <selectOption selector="{{EngagementCloudCouponUrlBuilderSection.cancelSend}}" userInput="{{DotCouponUrl.cancelSend}}" stepKey="setCancelSend"/>

        <grabValueFrom selector="{{EngagementCloudCouponUrlBuilderSection.urlBuilderOutput}}" stepKey="grabUrlValueWithAllowResendCancelSendUpdated"/>
        <assertStringContainsString message="The URL value does not match the expected value after allow resend is set to No." stepKey="assertContains4">
			<actualResult type="const">$grabUrlValueWithAllowResendCancelSendUpdated</actualResult>
			<expectedResult type="string">{{DotCouponUrl.urlValueWithAllowResendOff}}</expectedResult>
        </assertStringContainsString>

    </test>
</tests>
